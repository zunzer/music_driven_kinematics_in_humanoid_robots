# Choregraphe bezier export in Python.
def classic():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667])
	keys.append([[-0.155282, [3, -2.33333, 0], [3, 0.333333, 0]], [-0.61718, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.158135, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.158135, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.161482, [3, -0.333333, 0.00100194], [3, 0.444444, -0.00133592]], [-0.165148, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667])
	keys.append([[0, [3, -2.33333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0.621685, [3, -0.333333, 0], [3, 0.444444, 0]], [0.002962, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.0844999, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.0775673, [3, -0.866667, 0], [3, 0.444444, 0]], [0.0844999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.0775673, [3, -0.555556, 0], [3, 0.444444, 0]], [0.0804935, [3, -0.444444, 0], [3, 0.333333, 0]], [-1.17349, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0757642, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0757642, [3, -0.333333, 0], [3, 0.333333, 0]], [0.072268, [3, -0.333333, 0], [3, 0.888889, 0]], [0.072268, [3, -0.888889, 0], [3, 0.333333, 0]], [0.0844999, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0775673, [3, -0.333333, 0], [3, 0.444444, 0]], [0.0844999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.0775673, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.109483, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.101859, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.109483, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.101859, [3, -0.555556, -0.00193677], [3, 0.444444, 0.00154941]], [-0.0990246, [3, -0.444444, -0.00283448], [3, 0.333333, 0.00212586]], [0.068937, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.103047, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.103047, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0961546, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.0961546, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.109483, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.101859, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.109483, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.101859, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[-0.408239, [3, -0.0222222, 0], [3, 0.422222, 0]], [-0.649262, [3, -0.422222, 0.0740023], [3, 0.444444, -0.0778972]], [-0.863938, [3, -0.444444, 0], [3, 0.444444, 0]], [-0.408239, [3, -0.444444, 0], [3, 1, 0]], [-0.859388, [3, -1, 0], [3, 0.333333, 0]], [-0.857934, [3, -0.333333, -0.000536694], [3, 0.333333, 0.000536694]], [-0.856168, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.856168, [3, -0.333333, 0], [3, 1.55556, 0]], [-0.408239, [3, -1.55556, 0], [3, 0.333333, 0]], [-0.863938, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.408239, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[-1.19395, [3, -0.0222222, 0], [3, 0.422222, 0]], [-1.73137, [3, -0.422222, 0], [3, 0.444444, 0]], [-0.492183, [3, -0.444444, 0], [3, 0.444444, 0]], [-1.19395, [3, -0.444444, 0], [3, 1, 0]], [-0.492769, [3, -1, 0], [3, 0.333333, 0]], [-0.500988, [3, -0.333333, 8.20254e-05], [3, 0.333333, -8.20254e-05]], [-0.50107, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.50107, [3, -0.333333, 0], [3, 1.55556, 0]], [-1.19395, [3, -1.55556, 0], [3, 0.333333, 0]], [-0.492183, [3, -0.333333, 0], [3, 0.444444, 0]], [-1.19395, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[0.3, [3, -0.0222222, 0], [3, 0.422222, 0]], [0.658479, [3, -0.422222, 0], [3, 0.444444, 0]], [0.658479, [3, -0.444444, 0], [3, 0.444444, 0]], [0.3, [3, -0.444444, 0], [3, 1, 0]], [0.655975, [3, -1, 0], [3, 0.333333, 0]], [0.64664, [3, -0.333333, 0], [3, 0.333333, 0]], [0.655747, [3, -0.333333, 0], [3, 0.333333, 0]], [0.655747, [3, -0.333333, 0], [3, 1.55556, 0]], [0.3, [3, -1.55556, 0], [3, 0.333333, 0]], [0.658479, [3, -0.333333, 0], [3, 0.444444, 0]], [0.3, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.117999, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.108037, [3, -0.866667, 0], [3, 0.444444, 0]], [0.117999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.108037, [3, -0.555556, 0], [3, 0.444444, 0]], [0.116096, [3, -0.444444, 0], [3, 0.333333, 0]], [-0.697177, [3, -0.333333, 0], [3, 0.333333, 0]], [0.113636, [3, -0.333333, 0], [3, 0.333333, 0]], [0.113636, [3, -0.333333, 0], [3, 0.333333, 0]], [0.105779, [3, -0.333333, 0], [3, 0.888889, 0]], [0.105779, [3, -0.888889, 0], [3, 0.333333, 0]], [0.117999, [3, -0.333333, 0], [3, 0.333333, 0]], [0.108037, [3, -0.333333, 0], [3, 0.444444, 0]], [0.117999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.108037, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.115132, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.107678, [3, -0.866667, 0], [3, 0.444444, 0]], [0.115132, [3, -0.444444, 0], [3, 0.555556, 0]], [0.107678, [3, -0.555556, 0], [3, 0.444444, 0]], [0.113279, [3, -0.444444, 0], [3, 0.333333, 0]], [-0.0732328, [3, -0.333333, 0], [3, 0.333333, 0]], [0.108936, [3, -0.333333, 0], [3, 0.333333, 0]], [0.108936, [3, -0.333333, 0], [3, 0.333333, 0]], [0.101534, [3, -0.333333, 0], [3, 0.888889, 0]], [0.101534, [3, -0.888889, 0], [3, 0.333333, 0]], [0.115132, [3, -0.333333, 0], [3, 0.333333, 0]], [0.107678, [3, -0.333333, 0], [3, 0.444444, 0]], [0.115132, [3, -0.444444, 0], [3, 0.555556, 0]], [0.107678, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.173871, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.167057, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.173871, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.167057, [3, -0.555556, -0.000716536], [3, 0.444444, 0.000573229]], [-0.166484, [3, -0.444444, 0], [3, 0.333333, 0]], [-0.249203, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.166486, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.166486, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.167071, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.167071, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.173871, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.167057, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.173871, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.167057, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.0872551, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.0853791, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.0872551, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.0853791, [3, -0.555556, -0.000449003], [3, 0.444444, 0.000359203]], [-0.0848305, [3, -0.444444, -0.000548561], [3, 0.333333, 0.000411421]], [2.10902, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0853791, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0853791, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0761142, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.0761142, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.0872551, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0853791, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.0872551, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.0853791, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[1.44879, [3, -0.0222222, 0], [3, 0.422222, 0]], [-0.47473, [3, -0.422222, 0.41809], [3, 0.444444, -0.440095]], [-1.12576, [3, -0.444444, 0], [3, 0.444444, 0]], [1.44879, [3, -0.444444, 0], [3, 1, 0]], [-1.12633, [3, -1, 0], [3, 0.333333, 0]], [-1.12545, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.12845, [3, -0.333333, 0], [3, 0.333333, 0]], [0.563741, [3, -0.333333, -0.151602], [3, 1.55556, 0.707478]], [1.44879, [3, -1.55556, 0], [3, 0.333333, 0]], [-1.12576, [3, -0.333333, 0], [3, 0.444444, 0]], [1.44879, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667, 13.6, 14.6, 15.6, 16.9333])
	keys.append([[0.22554, [3, -0.0222222, 0], [3, 0.422222, 0]], [1.07512, [3, -0.422222, 0], [3, 0.444444, 0]], [0.401426, [3, -0.444444, 0.141597], [3, 0.444444, -0.141597]], [0.22554, [3, -0.444444, 0], [3, 1, 0]], [0.409842, [3, -1, 0], [3, 0.333333, 0]], [0.408791, [3, -0.333333, 0.000991639], [3, 0.333333, -0.000991639]], [0.403892, [3, -0.333333, 0], [3, 0.333333, 0]], [0.403892, [3, -0.333333, 0], [3, 0.333333, 0]], [1.32645, [3, -0.333333, 0], [3, 0.444444, 0]], [1.32645, [3, -0.444444, 0], [3, 0.444444, 0]], [1.32645, [3, -0.444444, 0], [3, 0.333333, 0]], [0.22554, [3, -0.333333, 0], [3, 0.333333, 0]], [0.401426, [3, -0.333333, 0], [3, 0.444444, 0]], [0.22554, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[-0.0951754, [3, -0.0222222, 0], [3, 0.422222, 0]], [-0.0951754, [3, -0.422222, 0], [3, 0.444444, 0]], [-1.37532, [3, -0.444444, 0], [3, 0.444444, 0]], [-0.0951754, [3, -0.444444, 0], [3, 1, 0]], [-1.36801, [3, -1, 0], [3, 0.333333, 0]], [-1.36504, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.36825, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.36825, [3, -0.333333, 0], [3, 1.55556, 0]], [-0.0951754, [3, -1.55556, 0], [3, 0.333333, 0]], [-1.37532, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.0951754, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.0844999, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.0895185, [3, -0.866667, 0], [3, 0.444444, 0]], [0.0844999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.0955461, [3, -0.555556, 0], [3, 0.444444, 0]], [0.0848179, [3, -0.444444, 0.0107282], [3, 0.333333, -0.00804613]], [-1.17345, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0884449, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0884449, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0972939, [3, -0.333333, -0.00884899], [3, 0.444444, 0.0117987]], [0.932006, [3, -0.444444, 0], [3, 0.444444, 0]], [0.0972939, [3, -0.444444, 0.0170586], [3, 0.333333, -0.012794]], [0.0844999, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0895185, [3, -0.333333, 0], [3, 0.444444, 0]], [0.0844999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.0955461, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.109483, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.1091, [3, -0.866667, 0], [3, 0.444444, 0]], [0.109483, [3, -0.444444, 0], [3, 0.555556, 0]], [0.105547, [3, -0.555556, 0.000718065], [3, 0.444444, -0.000574452]], [0.104973, [3, -0.444444, 0.000574452], [3, 0.333333, -0.000430839]], [-0.0684331, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0990296, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0990296, [3, -0.333333, 0], [3, 0.333333, 0]], [0.10222, [3, -0.333333, -0.00319028], [3, 0.444444, 0.00425371]], [0.176278, [3, -0.444444, 0], [3, 0.444444, 0]], [0.10222, [3, -0.444444, 0], [3, 0.333333, 0]], [0.109483, [3, -0.333333, 0], [3, 0.333333, 0]], [0.1091, [3, -0.333333, 0], [3, 0.444444, 0]], [0.109483, [3, -0.444444, 0], [3, 0.555556, 0]], [0.105547, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[0.408239, [3, -0.0222222, 0], [3, 0.422222, 0]], [0.649262, [3, -0.422222, -0.0740023], [3, 0.444444, 0.0778972]], [0.863938, [3, -0.444444, 0], [3, 0.444444, 0]], [0.408239, [3, -0.444444, 0], [3, 1, 0]], [0.859388, [3, -1, 0], [3, 0.333333, 0]], [0.857934, [3, -0.333333, 0.000536694], [3, 0.333333, -0.000536694]], [0.856168, [3, -0.333333, 0], [3, 0.333333, 0]], [0.856168, [3, -0.333333, 0], [3, 1.55556, 0]], [0.408239, [3, -1.55556, 0], [3, 0.333333, 0]], [0.863938, [3, -0.333333, 0], [3, 0.444444, 0]], [0.408239, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[1.19395, [3, -0.0222222, 0], [3, 0.422222, 0]], [1.73137, [3, -0.422222, 0], [3, 0.444444, 0]], [0.492183, [3, -0.444444, 0], [3, 0.444444, 0]], [1.19395, [3, -0.444444, 0], [3, 1, 0]], [0.492769, [3, -1, 0], [3, 0.333333, 0]], [0.500988, [3, -0.333333, -8.20254e-05], [3, 0.333333, 8.20254e-05]], [0.50107, [3, -0.333333, 0], [3, 0.333333, 0]], [0.50107, [3, -0.333333, 0], [3, 1.55556, 0]], [1.19395, [3, -1.55556, 0], [3, 0.333333, 0]], [0.492183, [3, -0.333333, 0], [3, 0.444444, 0]], [1.19395, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[0.3, [3, -0.0222222, 0], [3, 0.422222, 0]], [0.658479, [3, -0.422222, 0], [3, 0.444444, 0]], [0.658479, [3, -0.444444, 0], [3, 0.444444, 0]], [0.3, [3, -0.444444, 0], [3, 1, 0]], [0.655975, [3, -1, 0], [3, 0.333333, 0]], [0.64664, [3, -0.333333, 0], [3, 0.333333, 0]], [0.655747, [3, -0.333333, 0], [3, 0.333333, 0]], [0.655747, [3, -0.333333, 0], [3, 1.55556, 0]], [0.3, [3, -1.55556, 0], [3, 0.333333, 0]], [0.658479, [3, -0.333333, 0], [3, 0.444444, 0]], [0.3, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 12.2667, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[0.117999, [3, -0.0222222, 0], [3, 0.866667, 0]], [0.117791, [3, -0.866667, 0], [3, 0.444444, 0]], [0.117999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.117791, [3, -0.555556, 0.000208184], [3, 0.444444, -0.000166547]], [0.116096, [3, -0.444444, 0.00169492], [3, 0.333333, -0.00127119]], [-0.697177, [3, -0.333333, 0], [3, 0.333333, 0]], [0.113637, [3, -0.333333, 0], [3, 0.333333, 0]], [0.113637, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11158, [3, -0.333333, 0.00205704], [3, 0.444444, -0.00274272]], [-1.53589, [3, -0.444444, 0], [3, 0.444444, 0]], [0.11158, [3, -0.444444, -0.00855909], [3, 0.333333, 0.00641932]], [0.117999, [3, -0.333333, 0], [3, 0.333333, 0]], [0.117791, [3, -0.333333, 0], [3, 0.444444, 0]], [0.117999, [3, -0.444444, 0], [3, 0.555556, 0]], [0.117791, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.115132, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.117302, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.115132, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.12459, [3, -0.555556, 0], [3, 0.444444, 0]], [-0.115478, [3, -0.444444, -0.00911281], [3, 0.333333, 0.00683461]], [0.0730907, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.118626, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.118626, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.110729, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.110729, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.115132, [3, -0.333333, 0.00109551], [3, 0.333333, -0.00109551]], [-0.117302, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.115132, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.124591, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.173871, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.167057, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.173871, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.167057, [3, -0.555556, -0.000716536], [3, 0.444444, 0.000573229]], [-0.166484, [3, -0.444444, 0], [3, 0.333333, 0]], [-0.249203, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.166486, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.166486, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.167071, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.167071, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.173871, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.167057, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.173871, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.167057, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0, 2.6, 3.93333, 5.6, 6.93333, 7.93333, 8.93333, 9.93333, 10.9333, 13.6, 14.6, 15.6, 16.9333, 18.6])
	keys.append([[-0.0872551, [3, -0.0222222, 0], [3, 0.866667, 0]], [-0.0841378, [3, -0.866667, 0], [3, 0.444444, 0]], [-0.0872551, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.0841378, [3, -0.555556, 0], [3, 0.444444, 0]], [-0.0860147, [3, -0.444444, 0], [3, 0.333333, 0]], [2.10902, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0841378, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0841378, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0748821, [3, -0.333333, 0], [3, 0.888889, 0]], [-0.0748821, [3, -0.888889, 0], [3, 0.333333, 0]], [-0.0872551, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0841378, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.0872551, [3, -0.444444, 0], [3, 0.555556, 0]], [-0.0841378, [3, -0.555556, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[1.44879, [3, -0.0222222, 0], [3, 0.422222, 0]], [-0.47473, [3, -0.422222, 0.41809], [3, 0.444444, -0.440095]], [-1.12576, [3, -0.444444, 0], [3, 0.444444, 0]], [1.44879, [3, -0.444444, 0], [3, 1, 0]], [-1.12633, [3, -1, 0], [3, 0.333333, 0]], [-1.12545, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.12845, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.12845, [3, -0.333333, 0], [3, 1.55556, 0]], [1.44879, [3, -1.55556, 0], [3, 0.333333, 0]], [-1.12576, [3, -0.333333, 0], [3, 0.444444, 0]], [1.44879, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[-0.22554, [3, -0.0222222, 0], [3, 0.422222, 0]], [-1.07512, [3, -0.422222, 0], [3, 0.444444, 0]], [-0.401426, [3, -0.444444, -0.141597], [3, 0.444444, 0.141597]], [-0.22554, [3, -0.444444, 0], [3, 1, 0]], [-0.409842, [3, -1, 0], [3, 0.333333, 0]], [-0.408791, [3, -0.333333, -0.000991639], [3, 0.333333, 0.000991639]], [-0.403892, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.403892, [3, -0.333333, 0], [3, 1.55556, 0]], [-0.22554, [3, -1.55556, 0], [3, 0.333333, 0]], [-0.401426, [3, -0.333333, 0], [3, 0.444444, 0]], [-0.22554, [3, -0.444444, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0, 1.26667, 2.6, 3.93333, 6.93333, 7.93333, 8.93333, 9.93333, 14.6, 15.6, 16.9333])
	keys.append([[0.0951754, [3, -0.0222222, 0], [3, 0.422222, 0]], [0.0951754, [3, -0.422222, 0], [3, 0.444444, 0]], [1.37532, [3, -0.444444, 0], [3, 0.444444, 0]], [0.0951754, [3, -0.444444, 0], [3, 1, 0]], [1.36801, [3, -1, 0], [3, 0.333333, 0]], [1.36544, [3, -0.333333, 0], [3, 0.333333, 0]], [1.36825, [3, -0.333333, 0], [3, 0.333333, 0]], [1.36825, [3, -0.333333, 0], [3, 1.55556, 0]], [0.0951754, [3, -1.55556, 0], [3, 0.333333, 0]], [1.37532, [3, -0.333333, 0], [3, 0.444444, 0]], [0.0951754, [3, -0.444444, 0], [3, 0, 0]]])

	return names, times, keys
