# Choregraphe bezier export in Python.
def disco():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.169843, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0983305, [3, -0.15, 0], [3, 0.166667, 0]], [-0.169843, [3, -0.166667, 0.0649586], [3, 0.166667, -0.0649586]], [-0.291421, [3, -0.166667, 0], [3, 0.25, 0]], [0.255879, [3, -0.25, 0], [3, 0.25, 0]], [-0.291421, [3, -0.25, 0], [3, 0.25, 0]], [0.255879, [3, -0.25, 0], [3, 0.233333, 0]], [-0.169843, [3, -0.233333, 0], [3, 1.85, 0]], [-0.169843, [3, -1.85, 0], [3, 0.25, 0]], [-0.164048, [3, -0.25, 0], [3, 0.25, 0]], [-0.671952, [3, -0.25, 0], [3, 0.25, 0]], [0.204204, [3, -0.25, 0], [3, 0.25, 0]], [-0.164048, [3, -0.25, 0.00124183], [3, 1.16667, -0.00579519]], [-0.169843, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0, [3, -0.0166667, 0], [3, 0.15, 0]], [0, [3, -0.15, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.166667, 0]], [0.997056, [3, -0.166667, 0], [3, 0.25, 0]], [-0.832175, [3, -0.25, 0], [3, 0.25, 0]], [0.997056, [3, -0.25, 0], [3, 0.25, 0]], [-0.832175, [3, -0.25, 0], [3, 0.233333, 0]], [0, [3, -0.233333, 0], [3, 1.85, 0]], [0, [3, -1.85, 0], [3, 0.25, 0]], [0, [3, -0.25, 0], [3, 0.25, 0]], [0, [3, -0.25, 0], [3, 0.25, 0]], [0, [3, -0.25, 0], [3, 0.25, 0]], [0, [3, -0.25, 0], [3, 1.16667, 0]], [0, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.0845734, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0742472, [3, -0.15, 0], [3, 0.166667, 0]], [0.0748022, [3, -0.166667, -0.000303958], [3, 0.166667, 0.000303958]], [0.076071, [3, -0.166667, 0], [3, 0.25, 0]], [0.076071, [3, -0.25, 0], [3, 0.25, 0]], [0.0764959, [3, -0.25, -0.000424941], [3, 0.25, 0.000424941]], [0.0871996, [3, -0.25, 0], [3, 0.233333, 0]], [0.0769764, [3, -0.233333, 0], [3, 0.266667, 0]], [0.0770557, [3, -0.266667, -7.9279e-05], [3, 1.58333, 0.000470719]], [0.0845734, [3, -1.58333, 0], [3, 0.25, 0]], [0.0836755, [3, -0.25, 0], [3, 0.25, 0]], [0.0836755, [3, -0.25, 0], [3, 0.25, 0]], [0.0836755, [3, -0.25, 0], [3, 0.25, 0]], [0.0836754, [3, -0.25, 0], [3, 1.16667, 0]], [0.0845734, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.0984977, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.120817, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0895692, [3, -0.166667, -0.00145444], [3, 0.166667, 0.00145444]], [-0.0881148, [3, -0.166667, 0], [3, 0.25, 0]], [-0.0982974, [3, -0.25, 0], [3, 0.25, 0]], [-0.0877367, [3, -0.25, 0], [3, 0.25, 0]], [-0.100319, [3, -0.25, 0], [3, 0.233333, 0]], [-0.0893008, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.0894046, [3, -0.266667, 0.000103838], [3, 1.58333, -0.00061654]], [-0.0984977, [3, -1.58333, 0], [3, 0.25, 0]], [-0.0898719, [3, -0.25, 0], [3, 0.25, 0]], [-0.0898719, [3, -0.25, 0], [3, 0.25, 0]], [-0.0898719, [3, -0.25, 0], [3, 0.25, 0]], [-0.0898719, [3, -0.25, 2.49671e-08], [3, 1.16667, -1.16513e-07]], [-0.0984977, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.469905, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.416432, [3, -0.15, 0], [3, 0.166667, 0]], [-0.469905, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.400885, [3, -0.166667, 0], [3, 0.25, 0]], [-0.841052, [3, -0.25, 0], [3, 0.25, 0]], [-0.400885, [3, -0.25, 0], [3, 0.25, 0]], [-0.841052, [3, -0.25, 0], [3, 0.233333, 0]], [-0.469905, [3, -0.233333, 0], [3, 1.85, 0]], [-0.469905, [3, -1.85, 0], [3, 0.25, 0]], [-0.475056, [3, -0.25, 0.00515032], [3, 0.25, -0.00515032]], [-1.53778, [3, -0.25, 0], [3, 0.25, 0]], [-1.52862, [3, -0.25, -0.00915848], [3, 0.25, 0.00915848]], [-0.475056, [3, -0.25, -0.00110368], [3, 1.16667, 0.00515049]], [-0.469905, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-1.19479, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.20037, [3, -0.15, 0], [3, 0.166667, 0]], [-1.19479, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.53707, [3, -0.166667, 0], [3, 0.25, 0]], [-0.405754, [3, -0.25, 0], [3, 0.25, 0]], [-1.53707, [3, -0.25, 0], [3, 0.25, 0]], [-0.405754, [3, -0.25, 0], [3, 0.233333, 0]], [-1.19479, [3, -0.233333, 0], [3, 1.85, 0]], [-1.19479, [3, -1.85, 0], [3, 0.25, 0]], [-1.33074, [3, -0.25, 0], [3, 0.25, 0]], [-0.864666, [3, -0.25, 0], [3, 0.25, 0]], [-0.867344, [3, -0.25, 0.00267854], [3, 0.25, -0.00267854]], [-1.33074, [3, -0.25, 0], [3, 1.16667, 0]], [-1.19479, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.302962, [3, -0.0166667, 0], [3, 0.15, 0]], [0.334036, [3, -0.15, 0], [3, 0.166667, 0]], [0.302962, [3, -0.166667, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.25, 0]], [0.997608, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [0.997608, [3, -0.25, 0.00239199], [3, 0.233333, -0.00223253]], [0.302962, [3, -0.233333, 0], [3, 0.266667, 0]], [1, [3, -0.266667, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.333333, 0]], [0.302962, [3, -0.333333, 0], [3, 0.25, 0]], [0.999789, [3, -0.25, 0], [3, 0.25, 0]], [0.823259, [3, -0.25, 0], [3, 0.25, 0]], [0.824701, [3, -0.25, -0.00144231], [3, 0.25, 0.00144231]], [0.999789, [3, -0.25, 0], [3, 1.16667, 0]], [0.302962, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.149532, [3, -0.0166667, 0], [3, 0.15, 0]], [0.17577, [3, -0.15, -0.00268345], [3, 0.166667, 0.00298161]], [0.178751, [3, -0.166667, 0], [3, 0.166667, 0]], [0.172144, [3, -0.166667, 0.00359139], [3, 0.25, -0.00538709]], [0.151816, [3, -0.25, 0], [3, 0.25, 0]], [0.174841, [3, -0.25, 0], [3, 0.25, 0]], [0.145791, [3, -0.25, 0], [3, 0.233333, 0]], [0.174828, [3, -0.233333, -0.00372746], [3, 0.266667, 0.00425996]], [0.179088, [3, -0.266667, 0], [3, 1.58333, 0]], [0.149532, [3, -1.58333, 0], [3, 0.25, 0]], [0.151721, [3, -0.25, 0], [3, 0.25, 0]], [0.151721, [3, -0.25, 0], [3, 0.25, 0]], [0.151721, [3, -0.25, 0], [3, 0.25, 0]], [0.151721, [3, -0.25, 3.32895e-08], [3, 1.16667, -1.55351e-07]], [0.149532, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.107802, [3, -0.0166667, 0], [3, 0.15, 0]], [0.117907, [3, -0.15, 0], [3, 0.166667, 0]], [0.086911, [3, -0.166667, 0.00628102], [3, 0.166667, -0.00628102]], [0.0802206, [3, -0.166667, 0], [3, 0.25, 0]], [0.102654, [3, -0.25, 0], [3, 0.25, 0]], [0.0814848, [3, -0.25, 0], [3, 0.25, 0]], [0.108186, [3, -0.25, 0], [3, 0.233333, 0]], [0.0952136, [3, -0.233333, 0.00320459], [3, 0.266667, -0.00366239]], [0.0875846, [3, -0.266667, 0], [3, 1.58333, 0]], [0.107802, [3, -1.58333, 0], [3, 0.25, 0]], [0.101153, [3, -0.25, 0], [3, 0.25, 0]], [0.101153, [3, -0.25, 0], [3, 0.25, 0]], [0.101153, [3, -0.25, 0], [3, 0.25, 0]], [0.101153, [3, -0.25, 0], [3, 1.16667, 0]], [0.107802, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.169995, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.15956, [3, -0.15, 0], [3, 0.166667, 0]], [-0.159614, [3, -0.166667, 1.82593e-05], [3, 0.166667, -1.82593e-05]], [-0.159669, [3, -0.166667, 5.47779e-05], [3, 0.25, -8.21668e-05]], [-0.169761, [3, -0.25, 0], [3, 0.25, 0]], [-0.166047, [3, -0.25, 0], [3, 0.25, 0]], [-0.166632, [3, -0.25, 0], [3, 0.233333, 0]], [-0.15783, [3, -0.233333, -0.000382834], [3, 0.266667, 0.000437524]], [-0.157393, [3, -0.266667, 0], [3, 1.58333, 0]], [-0.169995, [3, -1.58333, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 1.16667, 0]], [-0.169995, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.0851066, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.0851066, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0851066, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0851066, [3, -0.166667, 0], [3, 0.25, 0]], [-0.0851066, [3, -0.25, 0], [3, 0.25, 0]], [-0.0851066, [3, -0.25, 0], [3, 0.25, 0]], [-0.0851066, [3, -0.25, 0], [3, 0.233333, 0]], [-0.0851066, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.0851066, [3, -0.266667, 0], [3, 1.58333, 0]], [-0.0851066, [3, -1.58333, 0], [3, 0.25, 0]], [-0.0827737, [3, -0.25, 0], [3, 0.25, 0]], [-0.0827737, [3, -0.25, 0], [3, 0.25, 0]], [-0.0827737, [3, -0.25, 0], [3, 0.25, 0]], [-0.0827736, [3, -0.25, 0], [3, 1.16667, 0]], [-0.0851066, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 15.2, 16.45])
	keys.append([[1.45578, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.23918, [3, -0.15, 0], [3, 0.166667, 0]], [1.45578, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.73102, [3, -0.166667, 0], [3, 0.25, 0]], [1.15299, [3, -0.25, 0], [3, 0.25, 0]], [-1.73102, [3, -0.25, 0], [3, 0.25, 0]], [1.15299, [3, -0.25, -0.324414], [3, 0.233333, 0.302787]], [1.45578, [3, -0.233333, 0], [3, 0.766667, 0]], [-1.23918, [3, -0.766667, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.333333, 0]], [1.45578, [3, -0.333333, 0], [3, 0.25, 0]], [1.44958, [3, -0.25, 0.00619758], [3, 0.25, -0.00619758]], [-0.931912, [3, -0.25, 0], [3, 0.25, 0]], [0.956685, [3, -0.25, -0.396915], [3, 0.25, 0.396915]], [1.44958, [3, -0.25, 0], [3, 0.75, 0]], [-1.12923, [3, -0.75, 0], [3, 0.416667, 0]], [1.45578, [3, -0.416667, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 13.7, 16.45])
	keys.append([[0.220133, [3, -0.0166667, 0], [3, 0.15, 0]], [0.405997, [3, -0.15, 0], [3, 0.166667, 0]], [0.220133, [3, -0.166667, 0], [3, 0.166667, 0]], [0.705886, [3, -0.166667, 0], [3, 0.25, 0]], [-0.182881, [3, -0.25, 0], [3, 0.25, 0]], [0.705886, [3, -0.25, 0], [3, 0.25, 0]], [-0.182881, [3, -0.25, 0], [3, 0.233333, 0]], [0.220133, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.314159, [3, -0.266667, 0], [3, 0.25, 0]], [0.668461, [3, -0.25, 0], [3, 0.25, 0]], [-0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.804597, [3, -0.25, 0], [3, 0.25, 0]], [-0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.804597, [3, -0.25, 0], [3, 0.333333, 0]], [0.220133, [3, -0.333333, 0], [3, 0.25, 0]], [1.30524, [3, -0.25, -0.01724], [3, 0.25, 0.01724]], [1.32248, [3, -0.25, 0], [3, 0.25, 0]], [1.32238, [3, -0.25, 9.89364e-05], [3, 0.25, -9.89364e-05]], [1.30524, [3, -0.25, 0.0171406], [3, 0.25, -0.0171406]], [-0.314159, [3, -0.25, 0], [3, 0.916667, 0]], [0.220133, [3, -0.916667, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.104552, [3, -0.0166667, 0], [3, 0.15, 0]], [0.39653, [3, -0.15, 0], [3, 0.166667, 0]], [0.104552, [3, -0.166667, 0], [3, 0.166667, 0]], [1.4845, [3, -0.166667, 0], [3, 0.25, 0]], [0.0431786, [3, -0.25, 0], [3, 0.25, 0]], [1.4845, [3, -0.25, 0], [3, 0.25, 0]], [0.0431786, [3, -0.25, 0], [3, 0.233333, 0]], [0.104552, [3, -0.233333, 0], [3, 1.85, 0]], [0.104552, [3, -1.85, 0], [3, 0.25, 0]], [0.157214, [3, -0.25, 0], [3, 0.25, 0]], [0.147033, [3, -0.25, 0], [3, 0.25, 0]], [0.147062, [3, -0.25, -2.95944e-05], [3, 0.25, 2.95944e-05]], [0.157215, [3, -0.25, 0], [3, 1.16667, 0]], [0.104552, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.087441, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0772975, [3, -0.15, 0], [3, 0.166667, 0]], [0.0773608, [3, -0.166667, -2.10764e-05], [3, 0.166667, 2.10764e-05]], [0.077424, [3, -0.166667, 0], [3, 0.25, 0]], [0.077424, [3, -0.25, 0], [3, 0.25, 0]], [0.0771937, [3, -0.25, 0], [3, 0.25, 0]], [0.0872228, [3, -0.25, 0], [3, 0.233333, 0]], [0.076818, [3, -0.233333, 0], [3, 0.266667, 0]], [0.0768812, [3, -0.266667, -6.32168e-05], [3, 1.58333, 0.00037535]], [0.087441, [3, -1.58333, 0], [3, 0.25, 0]], [0.0865397, [3, -0.25, 0], [3, 0.25, 0]], [0.0865397, [3, -0.25, 0], [3, 0.25, 0]], [0.0865397, [3, -0.25, 0], [3, 0.25, 0]], [0.0865397, [3, -0.25, -4.99343e-08], [3, 1.16667, 2.33027e-07]], [0.087441, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.106986, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0721302, [3, -0.15, 0], [3, 0.166667, 0]], [0.099366, [3, -0.166667, -0.00198178], [3, 0.166667, 0.00198178]], [0.101348, [3, -0.166667, -0.000413614], [3, 0.25, 0.000620422]], [0.102468, [3, -0.25, 0], [3, 0.25, 0]], [0.102468, [3, -0.25, 0], [3, 0.25, 0]], [0.105718, [3, -0.25, 0], [3, 0.233333, 0]], [0.0909057, [3, -0.233333, 0], [3, 0.266667, 0]], [0.102655, [3, -0.266667, -0.000729454], [3, 1.58333, 0.00433113]], [0.106986, [3, -1.58333, 0], [3, 0.25, 0]], [0.0998923, [3, -0.25, 0], [3, 0.25, 0]], [0.0998923, [3, -0.25, 0], [3, 0.25, 0]], [0.0998923, [3, -0.25, 0], [3, 0.25, 0]], [0.0998923, [3, -0.25, -5.82567e-08], [3, 1.16667, 2.71864e-07]], [0.106986, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.445377, [3, -0.0166667, 0], [3, 0.15, 0]], [0.417535, [3, -0.15, 0], [3, 0.166667, 0]], [0.445377, [3, -0.166667, 0], [3, 0.166667, 0]], [0.433777, [3, -0.166667, 0], [3, 0.25, 0]], [0.446305, [3, -0.25, 0], [3, 0.25, 0]], [0.433777, [3, -0.25, 0], [3, 0.25, 0]], [0.446305, [3, -0.25, 0], [3, 0.233333, 0]], [0.445377, [3, -0.233333, 0], [3, 1.85, 0]], [0.445377, [3, -1.85, 0], [3, 0.25, 0]], [0.446095, [3, -0.25, -0.000718488], [3, 0.25, 0.000718488]], [1.53778, [3, -0.25, 0], [3, 0.25, 0]], [1.52796, [3, -0.25, 0.00981548], [3, 0.25, -0.00981548]], [0.446096, [3, -0.25, 0.00015409], [3, 1.16667, -0.000719087]], [0.445377, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[1.23314, [3, -0.0166667, 0], [3, 0.15, 0]], [1.20168, [3, -0.15, 0], [3, 0.166667, 0]], [1.23314, [3, -0.166667, -0.00743916], [3, 0.166667, 0.00743916]], [1.24632, [3, -0.166667, 0], [3, 0.25, 0]], [1.23986, [3, -0.25, 0], [3, 0.25, 0]], [1.24632, [3, -0.25, 0], [3, 0.25, 0]], [1.23986, [3, -0.25, 0.00227103], [3, 0.233333, -0.00211963]], [1.23314, [3, -0.233333, 0], [3, 1.85, 0]], [1.23314, [3, -1.85, 0], [3, 0.25, 0]], [1.33074, [3, -0.25, 0], [3, 0.25, 0]], [0.864666, [3, -0.25, 0], [3, 0.25, 0]], [0.867344, [3, -0.25, -0.00267854], [3, 0.25, 0.00267854]], [1.33074, [3, -0.25, 0], [3, 1.16667, 0]], [1.23314, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.331812, [3, -0.0166667, 0], [3, 0.15, 0]], [0.334036, [3, -0.15, 0], [3, 0.166667, 0]], [0.331812, [3, -0.166667, 0], [3, 0.166667, 0]], [0.331888, [3, -0.166667, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.233333, 0]], [0.331812, [3, -0.233333, 0], [3, 0.266667, 0]], [1, [3, -0.266667, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.333333, 0]], [0.331812, [3, -0.333333, 0], [3, 0.25, 0]], [0.999789, [3, -0.25, 0], [3, 0.25, 0]], [0.830568, [3, -0.25, 0], [3, 0.25, 0]], [0.83195, [3, -0.25, -0.00138259], [3, 0.25, 0.00138259]], [0.999789, [3, -0.25, 0], [3, 1.16667, 0]], [0.331812, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.137428, [3, -0.0166667, 0], [3, 0.15, 0]], [0.164466, [3, -0.15, 0], [3, 0.166667, 0]], [0.160537, [3, -0.166667, 0.0010689], [3, 0.166667, -0.0010689]], [0.158052, [3, -0.166667, 0.0024851], [3, 0.25, -0.00372764]], [0.137512, [3, -0.25, 0], [3, 0.25, 0]], [0.158608, [3, -0.25, 0], [3, 0.25, 0]], [0.143314, [3, -0.25, 0], [3, 0.233333, 0]], [0.163531, [3, -0.233333, 0], [3, 0.266667, 0]], [0.159839, [3, -0.266667, 0.00125422], [3, 1.58333, -0.00744694]], [0.137428, [3, -1.58333, 0], [3, 0.25, 0]], [0.145707, [3, -0.25, 0], [3, 0.25, 0]], [0.145707, [3, -0.25, 0], [3, 0.25, 0]], [0.145707, [3, -0.25, 0], [3, 0.25, 0]], [0.145707, [3, -0.25, 3.32895e-08], [3, 1.16667, -1.55351e-07]], [0.137428, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.114092, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.0661788, [3, -0.15, 0], [3, 0.166667, 0]], [-0.104982, [3, -0.166667, 0.00576866], [3, 0.166667, -0.00576866]], [-0.11075, [3, -0.166667, 0], [3, 0.25, 0]], [-0.109864, [3, -0.25, 0], [3, 0.25, 0]], [-0.115786, [3, -0.25, 0.00152789], [3, 0.25, -0.00152789]], [-0.119031, [3, -0.25, 0], [3, 0.233333, 0]], [-0.102608, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.119031, [3, -0.266667, 0], [3, 1.58333, 0]], [-0.114092, [3, -1.58333, 0], [3, 0.25, 0]], [-0.116732, [3, -0.25, 0], [3, 0.25, 0]], [-0.116732, [3, -0.25, 0], [3, 0.25, 0]], [-0.116732, [3, -0.25, 0], [3, 0.25, 0]], [-0.116732, [3, -0.25, 0], [3, 1.16667, 0]], [-0.114092, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.169995, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.15956, [3, -0.15, 0], [3, 0.166667, 0]], [-0.159614, [3, -0.166667, 1.82593e-05], [3, 0.166667, -1.82593e-05]], [-0.159669, [3, -0.166667, 5.47779e-05], [3, 0.25, -8.21668e-05]], [-0.169761, [3, -0.25, 0], [3, 0.25, 0]], [-0.166047, [3, -0.25, 0], [3, 0.25, 0]], [-0.166632, [3, -0.25, 0], [3, 0.233333, 0]], [-0.15783, [3, -0.233333, -0.000382834], [3, 0.266667, 0.000437524]], [-0.157393, [3, -0.266667, 0], [3, 1.58333, 0]], [-0.169995, [3, -1.58333, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 0.25, 0]], [-0.162019, [3, -0.25, 0], [3, 1.16667, 0]], [-0.169995, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[-0.0885334, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.083635, [3, -0.15, 0], [3, 0.166667, 0]], [-0.083635, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.083635, [3, -0.166667, 0], [3, 0.25, 0]], [-0.083635, [3, -0.25, 0], [3, 0.25, 0]], [-0.08279, [3, -0.25, 0], [3, 0.25, 0]], [-0.08279, [3, -0.25, 0], [3, 0.233333, 0]], [-0.08279, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.08279, [3, -0.266667, 0], [3, 1.58333, 0]], [-0.0885334, [3, -1.58333, 0], [3, 0.25, 0]], [-0.0861941, [3, -0.25, 0], [3, 0.25, 0]], [-0.0861941, [3, -0.25, 0], [3, 0.25, 0]], [-0.0861941, [3, -0.25, 0], [3, 0.25, 0]], [-0.0861941, [3, -0.25, 6.6579e-08], [3, 1.16667, -3.10702e-07]], [-0.0885334, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 15.2, 16.45])
	keys.append([[1.44891, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.23918, [3, -0.15, 0], [3, 0.166667, 0]], [1.44891, [3, -0.166667, 0], [3, 0.166667, 0]], [1.44788, [3, -0.166667, 0.00103331], [3, 0.25, -0.00154996]], [1.43326, [3, -0.25, 0], [3, 0.25, 0]], [1.44788, [3, -0.25, 0], [3, 0.25, 0]], [1.43326, [3, -0.25, 0], [3, 0.233333, 0]], [1.44891, [3, -0.233333, 0], [3, 0.766667, 0]], [-1.1013, [3, -0.766667, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.333333, 0]], [1.44891, [3, -0.333333, 0], [3, 0.25, 0]], [1.44029, [3, -0.25, 0.00862731], [3, 0.25, -0.00862731]], [-0.931912, [3, -0.25, 0], [3, 0.25, 0]], [0.956685, [3, -0.25, -0.395367], [3, 0.25, 0.395367]], [1.44029, [3, -0.25, 0], [3, 0.75, 0]], [-1.12923, [3, -0.75, 0], [3, 0.416667, 0]], [1.44891, [3, -0.416667, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.95, 10.7, 11.45, 12.2, 12.95, 13.7, 14.45, 16.45])
	keys.append([[-0.204757, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.405997, [3, -0.15, 0], [3, 0.166667, 0]], [-0.204757, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.303516, [3, -0.166667, 0], [3, 0.25, 0]], [-0.237187, [3, -0.25, 0], [3, 0.25, 0]], [-0.303516, [3, -0.25, 0], [3, 0.25, 0]], [-0.237187, [3, -0.25, -0.0170275], [3, 0.233333, 0.0158923]], [-0.204757, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.60912, [3, -0.266667, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [-0.60912, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [-0.60912, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.333333, 0]], [-0.204757, [3, -0.333333, 0.308456], [3, 0.25, -0.231342]], [-1.30524, [3, -0.25, 0.01724], [3, 0.25, -0.01724]], [-1.32248, [3, -0.25, 0], [3, 0.25, 0]], [-1.32238, [3, -0.25, -9.89364e-05], [3, 0.25, 9.89364e-05]], [-1.30524, [3, -0.25, -0.0171406], [3, 0.25, 0.0171406]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.666667, 0]], [-0.204757, [3, -0.666667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 9.95, 10.7, 11.45, 12.2, 12.95, 16.45])
	keys.append([[0.119869, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.266484, [3, -0.15, 0], [3, 0.166667, 0]], [0.119869, [3, -0.166667, 0], [3, 0.166667, 0]], [0.113691, [3, -0.166667, 0], [3, 0.25, 0]], [0.11807, [3, -0.25, 0], [3, 0.25, 0]], [0.113691, [3, -0.25, 0], [3, 0.25, 0]], [0.11807, [3, -0.25, -0.00106525], [3, 0.233333, 0.000994236]], [0.119869, [3, -0.233333, 0], [3, 1.85, 0]], [0.119869, [3, -1.85, 0], [3, 0.25, 0]], [-0.157214, [3, -0.25, 0], [3, 0.25, 0]], [-0.0887565, [3, -0.25, 0], [3, 0.25, 0]], [-0.0943754, [3, -0.25, 0.00561892], [3, 0.25, -0.00561892]], [-0.157215, [3, -0.25, 0], [3, 1.16667, 0]], [0.119869, [3, -1.16667, 0], [3, 0, 0]]])

	return names, times, keys

