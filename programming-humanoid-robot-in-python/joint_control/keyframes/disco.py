def disco():
    # Choregraphe bezier export in Python.
    names = list()
    times = list()
    keys = list()
    
    names.append("HeadPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.169843, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0983305, [3, -0.15, 0], [3, 0.166667, 0]], [-0.169843, [3, -0.166667, 0.0649586], [3, 0.166667, -0.0649586]], [-0.291421, [3, -0.166667, 0], [3, 0.25, 0]], [0.255879, [3, -0.25, 0], [3, 0.25, 0]], [-0.291421, [3, -0.25, 0], [3, 0.25, 0]], [0.255879, [3, -0.25, 0], [3, 0.233333, 0]], [-0.169843, [3, -0.233333, 0], [3, 2.35, 0]], [-0.169843, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("HeadYaw")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[0, [3, -0.0166667, 0], [3, 0.15, 0]], [0, [3, -0.15, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.166667, 0]], [0.997056, [3, -0.166667, 0], [3, 0.25, 0]], [-0.832175, [3, -0.25, 0], [3, 0.25, 0]], [0.997056, [3, -0.25, 0], [3, 0.25, 0]], [-0.832175, [3, -0.25, 0], [3, 0.233333, 0]], [0, [3, -0.233333, 0], [3, 2.35, 0]], [0, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LAnklePitch")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[0.0845734, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.17155, [3, -0.15, 0], [3, 0.166667, 0]], [0.0845734, [3, -0.166667, 0], [3, 0.416667, 0]], [0.0845734, [3, -0.416667, 0], [3, 0.5, 0]], [0.0845734, [3, -0.5, 0], [3, 0.233333, 0]], [0.0845734, [3, -0.233333, 0], [3, 2.35, 0]], [0.0845734, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LAnkleRoll")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[-0.0984977, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0688637, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0984977, [3, -0.166667, 0], [3, 0.416667, 0]], [-0.0984977, [3, -0.416667, 0], [3, 0.5, 0]], [-0.0984977, [3, -0.5, 0], [3, 0.233333, 0]], [-0.0984977, [3, -0.233333, 0], [3, 2.35, 0]], [-0.0984977, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LElbowRoll")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.469905, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.416432, [3, -0.15, 0], [3, 0.166667, 0]], [-0.469905, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.400885, [3, -0.166667, 0], [3, 0.25, 0]], [-0.841052, [3, -0.25, 0], [3, 0.25, 0]], [-0.400885, [3, -0.25, 0], [3, 0.25, 0]], [-0.841052, [3, -0.25, 0], [3, 0.233333, 0]], [-0.469905, [3, -0.233333, 0], [3, 2.35, 0]], [-0.469905, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LElbowYaw")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-1.19479, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.20037, [3, -0.15, 0], [3, 0.166667, 0]], [-1.19479, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.53707, [3, -0.166667, 0], [3, 0.25, 0]], [-0.405754, [3, -0.25, 0], [3, 0.25, 0]], [-1.53707, [3, -0.25, 0], [3, 0.25, 0]], [-0.405754, [3, -0.25, 0], [3, 0.233333, 0]], [-1.19479, [3, -0.233333, 0], [3, 2.35, 0]], [-1.19479, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LHand")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[0.302962, [3, -0.0166667, 0], [3, 0.15, 0]], [0.334036, [3, -0.15, 0], [3, 0.166667, 0]], [0.302962, [3, -0.166667, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.25, 0]], [0.997608, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [0.997608, [3, -0.25, 0.00239199], [3, 0.233333, -0.00223253]], [0.302962, [3, -0.233333, 0], [3, 0.266667, 0]], [1, [3, -0.266667, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.333333, 0]], [0.302962, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("LHipPitch")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[0.149532, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.695913, [3, -0.15, 0], [3, 0.166667, 0]], [0.148316, [3, -0.166667, -0.00048632], [3, 0.416667, 0.0012158]], [0.149532, [3, -0.416667, 0], [3, 0.5, 0]], [0.149532, [3, -0.5, 0], [3, 0.233333, 0]], [0.149532, [3, -0.233333, 0], [3, 2.35, 0]], [0.149532, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LHipRoll")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[0.107802, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.0715456, [3, -0.15, 0], [3, 0.166667, 0]], [0.0471239, [3, -0.166667, -0.0170808], [3, 0.416667, 0.0427019]], [0.107802, [3, -0.416667, 0], [3, 0.5, 0]], [0.107802, [3, -0.5, 0], [3, 0.233333, 0]], [0.107802, [3, -0.233333, 0], [3, 2.35, 0]], [0.107802, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LHipYawPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.169995, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.249867, [3, -0.15, 0.037811], [3, 0.166667, -0.0420122]], [-0.409465, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.387463, [3, -0.166667, -0.0220016], [3, 0.25, 0.0330024]], [-0.169995, [3, -0.25, 0], [3, 0.25, 0]], [-0.387463, [3, -0.25, 0], [3, 0.25, 0]], [-0.169995, [3, -0.25, 0], [3, 0.233333, 0]], [-0.169995, [3, -0.233333, 0], [3, 2.35, 0]], [-0.169995, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LKneePitch")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[-0.0851066, [3, -0.0166667, 0], [3, 0.15, 0]], [2.10733, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0851066, [3, -0.166667, 0], [3, 0.416667, 0]], [-0.0851066, [3, -0.416667, 0], [3, 0.5, 0]], [-0.0851066, [3, -0.5, 0], [3, 0.233333, 0]], [-0.0851066, [3, -0.233333, 0], [3, 2.35, 0]], [-0.0851066, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("LShoulderPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[1.45578, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.23918, [3, -0.15, 0], [3, 0.166667, 0]], [1.45578, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.73102, [3, -0.166667, 0], [3, 0.25, 0]], [1.15299, [3, -0.25, 0], [3, 0.25, 0]], [-1.73102, [3, -0.25, 0], [3, 0.25, 0]], [1.15299, [3, -0.25, -0.324414], [3, 0.233333, 0.302787]], [1.45578, [3, -0.233333, 0], [3, 1.26667, 0]], [-1.23918, [3, -1.26667, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.25, 0]], [-1.23918, [3, -0.25, 0], [3, 0.333333, 0]], [1.45578, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("LShoulderRoll")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[0.220133, [3, -0.0166667, 0], [3, 0.15, 0]], [0.405997, [3, -0.15, 0], [3, 0.166667, 0]], [0.220133, [3, -0.166667, 0], [3, 0.166667, 0]], [0.705886, [3, -0.166667, 0], [3, 0.25, 0]], [-0.182881, [3, -0.25, 0], [3, 0.25, 0]], [0.705886, [3, -0.25, 0], [3, 0.25, 0]], [-0.182881, [3, -0.25, 0], [3, 0.233333, 0]], [0.220133, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.314159, [3, -0.266667, 0], [3, 0.25, 0]], [0.668461, [3, -0.25, 0], [3, 0.25, 0]], [-0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.668461, [3, -0.25, 0], [3, 0.25, 0]], [-0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.804597, [3, -0.25, 0], [3, 0.25, 0]], [-0.314159, [3, -0.25, 0], [3, 0.25, 0]], [0.804597, [3, -0.25, 0], [3, 0.333333, 0]], [0.220133, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("LWristYaw")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[0.104552, [3, -0.0166667, 0], [3, 0.15, 0]], [0.39653, [3, -0.15, 0], [3, 0.166667, 0]], [0.104552, [3, -0.166667, 0], [3, 0.166667, 0]], [1.4845, [3, -0.166667, 0], [3, 0.25, 0]], [0.0431786, [3, -0.25, 0], [3, 0.25, 0]], [1.4845, [3, -0.25, 0], [3, 0.25, 0]], [0.0431786, [3, -0.25, 0], [3, 0.233333, 0]], [0.104552, [3, -0.233333, 0], [3, 2.35, 0]], [0.104552, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RAnklePitch")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[0.087441, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.17152, [3, -0.15, 0], [3, 0.166667, 0]], [0.087441, [3, -0.166667, 0], [3, 0.416667, 0]], [0.087441, [3, -0.416667, 0], [3, 0.5, 0]], [0.087441, [3, -0.5, 0], [3, 0.233333, 0]], [0.087441, [3, -0.233333, 0], [3, 2.35, 0]], [0.087441, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RAnkleRoll")
    times.append([0, 0.45, 0.95, 2.2, 3.7, 4.4, 11.45])
    keys.append([[0.106986, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.0677015, [3, -0.15, 0], [3, 0.166667, 0]], [0.106986, [3, -0.166667, 0], [3, 0.416667, 0]], [0.106986, [3, -0.416667, 0], [3, 0.5, 0]], [0.106986, [3, -0.5, 0], [3, 0.233333, 0]], [0.106986, [3, -0.233333, 0], [3, 2.35, 0]], [0.106986, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RElbowRoll")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[0.445377, [3, -0.0166667, 0], [3, 0.15, 0]], [0.417535, [3, -0.15, 0], [3, 0.166667, 0]], [0.445377, [3, -0.166667, 0], [3, 0.166667, 0]], [0.433777, [3, -0.166667, 0], [3, 0.25, 0]], [0.446305, [3, -0.25, 0], [3, 0.25, 0]], [0.433777, [3, -0.25, 0], [3, 0.25, 0]], [0.446305, [3, -0.25, 0], [3, 0.233333, 0]], [0.445377, [3, -0.233333, 0], [3, 2.35, 0]], [0.445377, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RElbowYaw")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[1.23314, [3, -0.0166667, 0], [3, 0.15, 0]], [1.20168, [3, -0.15, 0], [3, 0.166667, 0]], [1.23314, [3, -0.166667, -0.00743916], [3, 0.166667, 0.00743916]], [1.24632, [3, -0.166667, 0], [3, 0.25, 0]], [1.23986, [3, -0.25, 0], [3, 0.25, 0]], [1.24632, [3, -0.25, 0], [3, 0.25, 0]], [1.23986, [3, -0.25, 0.00227103], [3, 0.233333, -0.00211963]], [1.23314, [3, -0.233333, 0], [3, 2.35, 0]], [1.23314, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RHand")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[0.331812, [3, -0.0166667, 0], [3, 0.15, 0]], [0.334036, [3, -0.15, 0], [3, 0.166667, 0]], [0.331812, [3, -0.166667, 0], [3, 0.166667, 0]], [0.331888, [3, -0.166667, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.25, 0]], [0.331888, [3, -0.25, 0], [3, 0.233333, 0]], [0.331812, [3, -0.233333, 0], [3, 0.266667, 0]], [1, [3, -0.266667, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.25, 0]], [1, [3, -0.25, 0], [3, 0.333333, 0]], [0.331812, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("RHipPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[0.137428, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.69602, [3, -0.15, 0], [3, 0.166667, 0]], [0.137428, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.53589, [3, -0.166667, 0], [3, 0.25, 0]], [0.137428, [3, -0.25, 0], [3, 0.25, 0]], [-1.53589, [3, -0.25, 0], [3, 0.25, 0]], [0.137428, [3, -0.25, 0], [3, 0.233333, 0]], [0.137428, [3, -0.233333, 0], [3, 2.35, 0]], [0.137428, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RHipRoll")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.114092, [3, -0.0166667, 0], [3, 0.15, 0]], [0.0725689, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0471239, [3, -0.166667, 0.0174533], [3, 0.166667, -0.0174533]], [-0.0645772, [3, -0.166667, 0.00892911], [3, 0.25, -0.0133937]], [-0.114092, [3, -0.25, 0], [3, 0.25, 0]], [-0.0645772, [3, -0.25, 0], [3, 0.25, 0]], [-0.114092, [3, -0.25, 0], [3, 0.233333, 0]], [-0.114092, [3, -0.233333, 0], [3, 2.35, 0]], [-0.114092, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RHipYawPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.169995, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.249867, [3, -0.15, 0.037811], [3, 0.166667, -0.0420122]], [-0.409465, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.387463, [3, -0.166667, -0.0220016], [3, 0.25, 0.0330024]], [-0.169995, [3, -0.25, 0], [3, 0.25, 0]], [-0.387463, [3, -0.25, 0], [3, 0.25, 0]], [-0.169995, [3, -0.25, 0], [3, 0.233333, 0]], [-0.169995, [3, -0.233333, 0], [3, 2.35, 0]], [-0.169995, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RKneePitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[-0.0885334, [3, -0.0166667, 0], [3, 0.15, 0]], [2.10735, [3, -0.15, 0], [3, 0.166667, 0]], [-0.0885334, [3, -0.166667, 0], [3, 0.166667, 0]], [1.51495, [3, -0.166667, 0], [3, 0.25, 0]], [-0.0885334, [3, -0.25, 0], [3, 0.25, 0]], [1.51495, [3, -0.25, 0], [3, 0.25, 0]], [-0.0885334, [3, -0.25, 0], [3, 0.233333, 0]], [-0.0885334, [3, -0.233333, 0], [3, 2.35, 0]], [-0.0885334, [3, -2.35, 0], [3, 0, 0]]])
    
    names.append("RShoulderPitch")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[1.44891, [3, -0.0166667, 0], [3, 0.15, 0]], [-1.23918, [3, -0.15, 0], [3, 0.166667, 0]], [1.44891, [3, -0.166667, 0], [3, 0.166667, 0]], [1.44788, [3, -0.166667, 0.00103331], [3, 0.25, -0.00154996]], [1.43326, [3, -0.25, 0], [3, 0.25, 0]], [1.44788, [3, -0.25, 0], [3, 0.25, 0]], [1.43326, [3, -0.25, 0], [3, 0.233333, 0]], [1.44891, [3, -0.233333, 0], [3, 1.26667, 0]], [-1.1013, [3, -1.26667, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.25, 0]], [-1.1013, [3, -0.25, 0], [3, 0.333333, 0]], [1.44891, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("RShoulderRoll")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 5.2, 5.95, 6.7, 7.45, 8.2, 8.95, 9.7, 10.45, 11.45])
    keys.append([[-0.204757, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.405997, [3, -0.15, 0], [3, 0.166667, 0]], [-0.204757, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.303516, [3, -0.166667, 0], [3, 0.25, 0]], [-0.237187, [3, -0.25, 0], [3, 0.25, 0]], [-0.303516, [3, -0.25, 0], [3, 0.25, 0]], [-0.237187, [3, -0.25, -0.0170275], [3, 0.233333, 0.0158923]], [-0.204757, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.60912, [3, -0.266667, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [-0.60912, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [-0.60912, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.25, 0]], [-0.60912, [3, -0.25, 0], [3, 0.25, 0]], [0.314159, [3, -0.25, 0], [3, 0.333333, 0]], [-0.204757, [3, -0.333333, 0], [3, 0, 0]]])
    
    names.append("RWristYaw")
    times.append([0, 0.45, 0.95, 1.45, 2.2, 2.95, 3.7, 4.4, 11.45])
    keys.append([[0.119869, [3, -0.0166667, 0], [3, 0.15, 0]], [-0.266484, [3, -0.15, 0], [3, 0.166667, 0]], [0.119869, [3, -0.166667, 0], [3, 0.166667, 0]], [0.113691, [3, -0.166667, 0], [3, 0.25, 0]], [0.11807, [3, -0.25, 0], [3, 0.25, 0]], [0.113691, [3, -0.25, 0], [3, 0.25, 0]], [0.11807, [3, -0.25, -0.00106525], [3, 0.233333, 0.000994236]], [0.119869, [3, -0.233333, 0], [3, 2.35, 0]], [0.119869, [3, -2.35, 0], [3, 0, 0]]])
    
    return names, times, keys